@using PagedList;
@using PagedList.Mvc;
@model StaticPagedList<MVC.Models.VehicleModelViewModel>

@{
    ViewBag.Title = "Vehicle Model Index";
}

<h2>Vehicle Model Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<p>
    @using (Html.BeginForm("Index", "VehicleModel", FormMethod.Get))
    {
        <text>Search By Name:</text>
        @Html.TextBox("search") <input type="submit" value="Search" />
    }
</p>
<table class="table">
    <tr>

        <th>
            @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.sortOrder, search = Request["search"] })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Abrv)
        </th>
        <th></th>
    </tr>

    @if (Model.Count() == 0)
    {
        <tr>
            <td colspan="2">No rows match search criteria!</td>
        </tr>
    }
    else
    {
        foreach (var item in Model)
        {
            <tr>

                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.ActionLink(item.Abrv, "Details", "VehicleMake", new { id = item.MakeId }, null)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }
    }
</table>
@Html.PagedListPager(Model, pageNumber => Url.Action("Index", new { pageNumber, search = Request.QueryString["search"] }))